/* ------------------------
 Mixins
------------------------ */



@mixin grid {
  display: grid;
}



@mixin transition-all {
  @include transition(all,.2s,ease-in-out);
}

@mixin transition-one($el) {
  @include transition($el,.2s,ease-in-out);
}

// format $multi written in sass:
// background $trans, $color trans

$trans: .2s ease-in-out;

@mixin transition-multi($multi...) {
  -webkit-transition: $multi;
   -moz-transition: $multi;
    -ms-transition: $multi;
     -o-transition: $multi;
      transition: $multi;
}


@mixin transition-transform {
  @include transition-multi(-webkit-transform .2s ease-in-out, -moz-transform .2s ease-in-out, -ms-transform .2s ease-in-out, -o-transform .2s ease-in-out, transform .2s ease-in-out );
}



@mixin bgcover {
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
}

.bgcover { @include bgcover; }



@mixin flex {
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: -webkit-box;
  display: flex;
  /*
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;               */
}

@mixin align-items($args...) {
  -webkit-align-items: $args;
  -moz-align-items: $args;
  -ms-align-items: $args;
  align-items: $args;
}

@mixin justify-content($args...) {
  -webkit-justify-content: $args;
  -moz-justify-content: $args;
  -ms-justify-content: $args;
  justify-content: $args;
}

@mixin flex-direction($args...) {
  -webkit-flex-direction: $args;
  -moz-flex-direction: $args;
  -ms-flex-direction: $args;
  flex-direction: $args;
}

@mixin flex-basis($args...) {
  -webkit-flex-basis: $args;
  -moz-flex-basis: $args;
  -ms-flex-basis: $args;
  flex-basis: $args;
}

@mixin flex-wrap($args...) {
  -webkit-flex-wrap: $args;
  -moz-flex-wrap: $args;
  -ms-flex-wrap: $args;
  flex-wrap: $args;
}



@mixin gradienttext {
  background: none;        // for old browsers
  color: red;              // for old browsers
  background: -webkit-linear-gradient(left, red 0, deeppink 100%);
  background: -o-linear-gradient(left, red 0, deeppink 100%);
  background: -moz-linear-gradient(left, red 0, deeppink 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}


@mixin row-eq-height {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display:         flex;
}


@mixin clear {
  content: '';
  display: block;
  clear: both;
}


// set in pixels or ems
@mixin blur($amount) {
  -webkit-filter: blur($amount);
   -moz-filter: blur($amount);
    -o-filter: blur($amount);
     -ms-filter: blur($amount);
      filter: blur($amount);
}


@mixin blur($amt) {
  -webkit-filter: blur($amt);
   filter: blur($amt);
}


@mixin box-shadow ($type, $vert, $horiz, $blur, $color) {
  -webkit-box-shadow: $type $vert $horiz $blur $color;
   box-shadow: $type $vert $horiz $blur $color;
}


@mixin simple-box-shadow ($vert, $horiz, $blur, $color) {
  -webkit-box-shadow: $vert $horiz $blur $color;
   box-shadow: $vert $horiz $blur $color;
}


@mixin box-shadow-none {
  -webkit-box-shadow: 0 0 0 transparent;
   box-shadow: 0 0 0 transparent;
}


@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}


@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') { @content; }
  @include optional-at-root(':-moz-placeholder') { @content; }
  @include optional-at-root('::-moz-placeholder') { @content; }
  @include optional-at-root(':-ms-input-placeholder') { @content; }
}


@mixin selection {
  ::-moz-selection { @content; }
  ::selection  { @content; }
}



@mixin transition-delay ($time) {
  transition-delay: $time;
   -webkit-transition-delay: $time;
}

@mixin pause {
  -webkit-animation-play-state: paused;
   -moz-animation-play-state: paused;
    -o-animation-play-state: paused;
     animation-play-state: paused;
}


@mixin transition($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	 -moz-transition: $transition-property $transition-time $method;
	  -ms-transition: $transition-property $transition-time $method;
	   -o-transition: $transition-property $transition-time $method;
	    transition: $transition-property $transition-time $method;
}


@mixin border-radius ($rad) {
  border-radius: ($rad);
}


@mixin border-radius-corners ($nw, $ne, $se, $sw) {
  border-radius: ($nw $ne $se $sw);
}


@mixin translate($horiz,$vert) {
	-webkit-transform: translate($horiz,$vert);
	 -moz-transform: translate($horiz,$vert);
	  -ms-transform: translate($horiz,$vert);
	   -o-transform: translate($horiz,$vert);
	   transform: translate($horiz,$vert);
}


@mixin opacity($opac) {
	opacity: $opac !important;
   filter: alpha(opacity= $opac * 100 ) !important; /* For IE8 and earlier */
}


@mixin translatey($y) {
	-webkit-transform: translateY($y);
	 -ms-transform: translateY($y);
	  transform: translateY($y);
}


// $rotate and $skew with deg, a la "90deg"
// skew is in degrees, 0 is default
@mixin transform($rotate, $scale, $skew, $translatex, $translatey) {
  transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
   -webkit-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
    -moz-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
     -o-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
      -ms-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
}



@mixin scale($scale) {
  transform: scale($scale);
   -webkit-transform: scale($scale);
    -moz-transform: scale($scale);
     -o-transform: scale($scale);
      -ms-transform: scale($scale);
}



@mixin scale($x, $y) {
  transform: scale($x, $y);
   -webkit-transform: scale($x, $y);
    -moz-transform: scale($x, $y);
     -o-transform: scale($x, $y);
      -ms-transform: sclae($x, $y);
}



@mixin rotate($deg) {
  transform: rotate($deg);
   -webkit-transform: rotate($deg);
    -moz-transform: rotate($deg);
     -o-transform: rotate($deg);
      -ms-transform: rotate($deg);
}


@mixin hover {
  &:hover{ @content; }
	 &:active{ @content; }
	  &:focus{ @content; }
	   &:target{ @content; }
}

//  0deg = top to bottom
// 90deg = left to right
@mixin lineargradient($colora, $colorb) {
  background-image: -webkit-gradient(
   linear,
   right top,
   left top,
   color-stop(0,$colora),
   color-stop(1,$colorb)
  );
  background-image: -o-linear-gradient(90deg, $colora 0, $colorb 100%);
  background-image: -moz-linear-gradient(90deg, $colora 0, $colorb 100%);
  background-image: -webkit-linear-gradient(90deg, $colora 0, $colorb 100%);
  background-image: -ms-linear-gradient(90deg, $colora 0, $colorb 100%);
  background-image: linear-gradient(90deg, $colora 0, $colorb 100%);
}



// $position can be top, top left, 30% 50%, 10em 10em, etc.
@mixin radialgradient($position, $centercolor, $edgecolor) {
	background: -webkit-radial-gradient($position, $centercolor, $edgecolor);
	 background: -o-radial-gradient($position, $centercolor, $edgecolor);
	  background: -moz-radial-gradient($position, $centercolor, $edgecolor);
	   background: radial-gradient($position, $centercolor, $edgecolor);
}




// Animations are a three part thing
// this is Part One, leave it alone :)

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} { @content; }
  @-moz-keyframes #{$animationName} { @content; }
  @-o-keyframes #{$animationName} { @content; }
  @keyframes #{$animationName} { @content; }
}




// Part Two: name and define the animation

/*  @include keyframes(NAME) {
    50% { transform: scale(1.2); transform-origin: center center; }
    0%, 100% { transform: scale(1); transform-origin: center center; }
}  */


@include keyframes(toggle_top) {
  0% { @include transform(0deg, (1,1), 0, 0, 0); top: .5em; }
  50% { @include transform(0deg, (1,1), 0, 0, 0); top: .9em; }
  100% { @include transform(45deg, (1,1), 0, 0, 0); top: .9em; }
}

@include keyframes(toggle_bottom) {
  0% { @include transform(0deg, (1,1), 0, 0, 0); top: 1.65em; }
  50% { @include transform(0deg, (1,1), 0, 0, 0); top: .9em; }
  100% { @include transform(-45deg, (1,1), 0, 0, 0); top: .9em; }
}


@include keyframes(toggle_top_collapsed) {
  100% { @include transform(0deg, (1,1), 0, 0, 0); top: .5em; }
  50% { @include transform(0deg, (1,1), 0, 0, 0); top: .9em; }
  0% { @include transform(45deg, (1,1), 0, 0, 0); top: .9em; }
}

@include keyframes(toggle_bottom_collapsed) {
  100% { @include transform(0deg, (1,1), 0, 0, 0); top: 1.65em; }
  50% { @include transform(0deg, (1,1), 0, 0, 0); top: .9em; }
  0% { @include transform(-45deg, (1,1), 0, 0, 0); top: .9em; }
}



@mixin animation($name, $timing, $count, $duration) {
  -webkit-animation-name: $name;
  -webkit-animation-timing-function: $timing;
  -webkit-animation-iteration-count: $count;
  -webkit-animation-duration: $duration;

  animation-name: $name;
  animation-timing-function: $timing;
  animation-iteration-count: $count;
  animation-duration: $duration;
}



// Part Three: apply the mixin to the SCSS file a la
// #animated-div { @include animation(name, ease-in-out, infinite, 4s); }
