/* ------------------------
  Mixins
------------------------ */




// Default to theme
@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') { @content; }
  @include optional-at-root(':-moz-placeholder') { @content; }
  @include optional-at-root('::-moz-placeholder') { @content; }
  @include optional-at-root(':-ms-input-placeholder') { @content; }
}

@mixin hover {
  &:hover{ @content; }
	 &:active{ @content; }
	  &:focus{ @content; }
	   &:target{ @content; }
}

@mixin transition ($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	 -moz-transition: $transition-property $transition-time $method;
	  -ms-transition: $transition-property $transition-time $method;
	   -o-transition: $transition-property $transition-time $method;
	    transition: $transition-property $transition-time $method;
}

@mixin transition-one($el) {
  @include transition($el,.2s,ease-in-out);
}

@mixin transition-multi($multi...) {
  -webkit-transition: $multi;
   -moz-transition: $multi;
    -ms-transition: $multi;
     -o-transition: $multi;
      transition: $multi;
}

@mixin flex {
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: -webkit-box;
  display: flex;
}

@mixin flex-wrap($args...) {
  -webkit-flex-wrap: $args;
  -moz-flex-wrap: $args;
  -ms-flex-wrap: $args;
  flex-wrap: $args;
}

@mixin justify-content($args...) {
  -webkit-justify-content: $args;
  -moz-justify-content: $args;
  -ms-justify-content: $args;
  justify-content: $args;
}

@mixin align-items($args...) {
  -webkit-align-items: $args;
  -moz-align-items: $args;
  -ms-align-items: $args;
  align-items: $args;
}


@mixin rotate($deg) {
  transform: rotate($deg);
   -webkit-transform: rotate($deg);
    -moz-transform: rotate($deg);
     -o-transform: rotate($deg);
      -ms-transform: rotate($deg);
}


// $rotate and $skew with deg, a la "90deg"
// skew is in degrees, 0 is default
// rotate(deg), scale, skew(deg), translatex, translatey
@mixin transform($rotate, $scale, $skew, $translatex, $translatey) {
  transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
   -webkit-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
    -moz-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
     -o-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
      -ms-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
}

// transform .2s ease-in-out, -webkit-transform .2s ease-in-out, -moz-transform .2s ease-in-out, -o-transform .2s ease-in-out, -ms-transform .2s ease-in-out

@mixin border-radius ($rad) {
  border-radius: ($rad);
}

@mixin box-shadow ($type, $vert, $horiz, $blur, $color) {
  -webkit-box-shadow: $type $vert $horiz $blur $color;
   box-shadow: $type $vert $horiz $blur $color;
}

@mixin simple-box-shadow ($vert, $horiz, $blur, $color) {
  -webkit-box-shadow: $vert $horiz $blur $color;
   box-shadow: $vert $horiz $blur $color;
}


@mixin linkgradient($color) {
  background-image: -webkit-gradient(
   linear,
   right top,
   left top,
   color-stop(.99, transparent),
   color-stop(1,$color)
  );

  background-image: -o-linear-gradient(180deg, transparent calc(100% - .08rem), $color calc(100% - .0799rem));
  background-image: -moz-linear-gradient(180deg, transparent calc(100% - .08rem), $color calc(100% - .0799rem));
  background-image: -webkit-linear-gradient(180deg, transparent calc(100% - .08rem), $color calc(100% - .0799rem));
  background-image: -ms-linear-gradient(180deg, transparent calc(100% - .08rem), $color calc(100% - .0799rem));
  background-image: linear-gradient(180deg, transparent calc(100% - .08rem), $color calc(100% - .0799rem));
}



@mixin clip-path($args...) {
  -ms-clip-path: $args;
   -o-clip-path: $args;
    -moz-clip-path: $args;
     -webkit-clip-path: $args;
      clip-path: $args;
}


// Animation
@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} { @content; }
  @-moz-keyframes #{$animationName} { @content; }
  @-o-keyframes #{$animationName} { @content; }
  @keyframes #{$animationName} { @content; }
}

@mixin animation($name, $timing, $count, $duration) {
  -webkit-animation-name: $name;
  -webkit-animation-timing-function: $timing;
  -webkit-animation-iteration-count: $count;
  -webkit-animation-duration: $duration;

  animation-name: $name;
  animation-timing-function: $timing;
  animation-iteration-count: $count;
  animation-duration: $duration;
}

// implement: @include animation([NAME], ease-in-out, 1, [SECONDS]);

$toggle_top: .75rem;
$toggle_top_bottom_collapsed: 1.4rem;
$toggle_bottom: 2rem;

%toggle_middle { top: 1.38rem; }

%toggle_top { top: $toggle_top; }
%toggle_top_bottom_collapsed { top: $toggle_top_bottom_collapsed;  }
%toggle_bottom { top: $toggle_bottom; }



// Nav
@include keyframes(toggle_top) {
  0% { @include transform(0deg, (1,1), 0, 0, 0); top: $toggle_top; }
  50% { @include transform(0deg, (1,1), 0, 0, 0); top: $toggle_top_bottom_collapsed; }
  100% { @include transform(45deg, (1,1), 0, 0, 0); top: $toggle_top_bottom_collapsed; }
}

@include keyframes(toggle_bottom) {
  0% { @include transform(0deg, (1,1), 0, 0, 0); top: $toggle_bottom; }
  50% { @include transform(0deg, (1,1), 0, 0, 0); top: $toggle_top_bottom_collapsed; }
  100% { @include transform(-45deg, (1,1), 0, 0, 0); top: $toggle_top_bottom_collapsed; }
}


@include keyframes(toggle_top_collapsed) {
  100% { @include transform(0deg, (1,1), 0, 0, 0); top: $toggle_top; }
  70% { @include transform(0deg, (1,1), 0, 0, 0); top: $toggle_top_bottom_collapsed; }
  0% { @include transform(45deg, (1,1), 0, 0, 0); top: $toggle_top_bottom_collapsed; }
}

@include keyframes(toggle_bottom_collapsed) {
  100% { @include transform(0deg, (1,1), 0, 0, 0); top: $toggle_bottom; }
  70% { @include transform(0deg, (1,1), 0, 0, 0); top: $toggle_top_bottom_collapsed; }
  0% { @include transform(-45deg, (1,1), 0, 0, 0); top: $toggle_top_bottom_collapsed; }
}


// subnav - two part so that focus ring isn't cut off
@include keyframes(subnav_desktop) {
  0%   { max-height: 0;     @include clip-path(polygon(0 0, 100% 0, 100% 100%, 0 100%)); }
  99%  { max-height: 40rem; @include clip-path(polygon(0 0, 100% 0, 100% 100%, 0 100%)); }
  100% { max-height: 40rem; @include clip-path(unset); }
}



// Forms
@mixin flex-direction($args...) {
  -webkit-flex-direction: $args;
  -moz-flex-direction: $args;
  -ms-flex-direction: $args;
  flex-direction: $args;
}

@mixin flex-grow($args...) {
  -webkit-flex-grow: $args;
  -moz-flex-grow: $args;
  -ms-flex-grow: $args;
  flex-grow: $args;
}


@include keyframes(fadein) {
     0% { opacity: 0; }
  100% { opacity: 1; }
}

@include keyframes(fadeout) {
     0% { opacity: 1; }
  100% { opacity: 0; }
}
